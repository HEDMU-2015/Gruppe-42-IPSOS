 CREATE TABLE departments(
id INT IDENTITY,
name VARCHAR(255) NOT NULL,
parent_id INT REFERENCES departments(id) ON DELETE CASCADE,
);

CREATE UNIQUE INDEX uidx_department_name ON departments(name);

CREATE TABLE skills(
id INT IDENTITY,
name VARCHAR(255) NOT NULL,
department_id INT REFERENCES departments(id) ON DELETE CASCADE
);

CREATE UNIQUE INDEX uidx_skill_name ON skills(name);

CREATE TABLE employees (
id INT IDENTITY,
name VARCHAR(255) NOT NULL,
email VARCHAR(255) NOT NULL
);

CREATE UNIQUE INDEX uidx_employees_email ON employees(email);

CREATE TABLE employee_skills (
employee_id INT REFERENCES employees(id) ON DELETE CASCADE,
skill_id INT REFERENCES skills(id) ON DELETE CASCADE
);

SELECT employees.name, employees.email,  COUNT(id)
AS skills_count
FROM employees
INNER JOIN employee_skills ON(employees.id = employee_skills.employee_id)
WHERE employee_skills.skill_id IN(?,?...) GROUP BY employees.email, employees.name
ORDER BY skills_count DESC


SELECT e.id, e.name, e.email,
GROUP_CONCAT(s.name SEPARATOR ', ') AS skills_names
FROM employees AS e LEFT JOIN employee_skills AS skills ON e.id = skills.employee_id
LEFT JOIN skills AS s ON s.id = skills.skill_id WHERE LOWER(e.name) = 'rasmus'
GROUP BY e.id, e.name, e.email


SELECT e.name, e.email, s.id AS skill_id, s.name, d.name, d.id AS department_id FROM employees AS e
INNER JOIN employee_skills AS es ON e.id = es.employee_id
INNER JOIN skills AS s ON es.skill_id = s.id
INNER JOIN departments AS d ON d.id = s.department_id
WHERE e.id = 1